<?xml version="1.0" encoding="UTF-8"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="12118" systemVersion="16E195" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" colorMatched="YES" initialViewController="BYZ-38-t0r">
    <device id="retina4_7" orientation="portrait">
        <adaptation id="fullscreen"/>
    </device>
    <dependencies>
        <deployment version="2048" identifier="iOS"/>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="12086"/>
        <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
    </dependencies>
    <scenes>
        <!--View Controller-->
        <scene sceneID="tne-QT-ifu">
            <objects>
                <viewController id="BYZ-38-t0r" customClass="ViewController" customModule="AccessorInstantiator" customModuleProvider="target" sceneMemberID="viewController">
                    <layoutGuides>
                        <viewControllerLayoutGuide type="top" id="y3c-jy-aDJ"/>
                        <viewControllerLayoutGuide type="bottom" id="wfy-db-euE"/>
                    </layoutGuides>
                    <view key="view" contentMode="scaleToFill" id="8bC-Xf-vdC">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Accessor" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="K7M-HD-AJo">
                                <rect key="frame" x="142" y="28" width="91" height="23"/>
                                <fontDescription key="fontDescription" name="Arial-BoldMT" family="Arial" pointSize="20"/>
                                <color key="textColor" red="0.0" green="0.50309728770335571" blue="1" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
                                <nil key="highlightedColor"/>
                            </label>
                            <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Afk-xW-f0J">
                                <rect key="frame" x="0.0" y="384" width="375" height="283"/>
                                <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                            </textView>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" bounces="NO" pagingEnabled="YES" showsHorizontalScrollIndicator="NO" showsVerticalScrollIndicator="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Pvd-fm-epJ">
                                <rect key="frame" x="0.0" y="59" width="375" height="325"/>
                                <subviews>
                                    <containerView opaque="NO" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="Zh3-7C-pzu">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="325"/>
                                        <connections>
                                            <segue destination="hHV-Hu-I2E" kind="embed" id="KAZ-J9-dDT"/>
                                        </connections>
                                    </containerView>
                                    <containerView opaque="NO" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="aj9-br-fSz">
                                        <rect key="frame" x="375" y="0.0" width="375" height="325"/>
                                        <connections>
                                            <segue destination="JhK-Md-9Zj" kind="embed" id="Xsc-GF-juk"/>
                                        </connections>
                                    </containerView>
                                </subviews>
                                <constraints>
                                    <constraint firstItem="aj9-br-fSz" firstAttribute="height" secondItem="Pvd-fm-epJ" secondAttribute="height" id="0l4-i3-upx"/>
                                    <constraint firstAttribute="bottom" secondItem="aj9-br-fSz" secondAttribute="bottom" id="8XS-B9-Eum"/>
                                    <constraint firstItem="Zh3-7C-pzu" firstAttribute="top" secondItem="Pvd-fm-epJ" secondAttribute="top" id="9X8-oV-sfK"/>
                                    <constraint firstItem="aj9-br-fSz" firstAttribute="width" secondItem="Pvd-fm-epJ" secondAttribute="width" id="HiQ-jS-J6E"/>
                                    <constraint firstItem="aj9-br-fSz" firstAttribute="top" secondItem="Pvd-fm-epJ" secondAttribute="top" id="hs3-DS-mH8"/>
                                    <constraint firstAttribute="trailing" secondItem="aj9-br-fSz" secondAttribute="trailing" id="mTj-eZ-VC6"/>
                                    <constraint firstAttribute="bottom" secondItem="Zh3-7C-pzu" secondAttribute="bottom" id="ntH-a0-tRs"/>
                                    <constraint firstItem="Zh3-7C-pzu" firstAttribute="leading" secondItem="Pvd-fm-epJ" secondAttribute="leading" id="pRM-IX-YrN"/>
                                    <constraint firstItem="aj9-br-fSz" firstAttribute="leading" secondItem="Pvd-fm-epJ" secondAttribute="leading" constant="375" id="rEq-wQ-uce"/>
                                    <constraint firstItem="aj9-br-fSz" firstAttribute="leading" secondItem="Zh3-7C-pzu" secondAttribute="trailing" id="vLI-8r-rjI"/>
                                    <constraint firstAttribute="height" constant="325" id="y0a-0s-2YJ"/>
                                </constraints>
                            </scrollView>
                        </subviews>
                        <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                        <constraints>
                            <constraint firstItem="Afk-xW-f0J" firstAttribute="trailing" secondItem="8bC-Xf-vdC" secondAttribute="trailing" id="G0d-pt-Qnx"/>
                            <constraint firstItem="Pvd-fm-epJ" firstAttribute="leading" secondItem="8bC-Xf-vdC" secondAttribute="leading" id="SkR-el-XnJ"/>
                            <constraint firstItem="K7M-HD-AJo" firstAttribute="centerX" secondItem="8bC-Xf-vdC" secondAttribute="centerX" id="Ssl-db-kHr"/>
                            <constraint firstAttribute="trailing" secondItem="Pvd-fm-epJ" secondAttribute="trailing" id="WM1-kc-D0s"/>
                            <constraint firstAttribute="bottom" secondItem="Afk-xW-f0J" secondAttribute="bottom" id="fwb-gt-Xb7"/>
                            <constraint firstItem="K7M-HD-AJo" firstAttribute="top" secondItem="y3c-jy-aDJ" secondAttribute="bottom" constant="12" id="jnq-lf-juA"/>
                            <constraint firstItem="Pvd-fm-epJ" firstAttribute="top" secondItem="K7M-HD-AJo" secondAttribute="bottom" constant="8" id="kgR-N7-9K8"/>
                            <constraint firstItem="Afk-xW-f0J" firstAttribute="leading" secondItem="8bC-Xf-vdC" secondAttribute="leading" id="kie-cj-aFm"/>
                            <constraint firstItem="K7M-HD-AJo" firstAttribute="top" secondItem="y3c-jy-aDJ" secondAttribute="bottom" constant="8" id="mzK-1S-vLx"/>
                            <constraint firstItem="Afk-xW-f0J" firstAttribute="top" secondItem="Pvd-fm-epJ" secondAttribute="bottom" id="pev-6u-NZO"/>
                        </constraints>
                        <variation key="default">
                            <mask key="constraints">
                                <exclude reference="jnq-lf-juA"/>
                            </mask>
                        </variation>
                    </view>
                    <connections>
                        <outlet property="labelTitle" destination="K7M-HD-AJo" id="i9b-LB-Zhe"/>
                        <outlet property="textViewLog" destination="Afk-xW-f0J" id="HDD-tM-1aR"/>
                    </connections>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="dkx-z0-nzr" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="448.80000000000001" y="398.95052473763121"/>
        </scene>
        <!--Accessor View Controller-->
        <scene sceneID="UVl-Nb-GBd">
            <objects>
                <viewController id="hHV-Hu-I2E" customClass="AccessorViewController" customModule="AccessorInstantiator" customModuleProvider="target" sceneMemberID="viewController">
                    <layoutGuides>
                        <viewControllerLayoutGuide type="top" id="2pj-xl-5HO"/>
                        <viewControllerLayoutGuide type="bottom" id="IS4-xu-Tmn"/>
                    </layoutGuides>
                    <view key="view" contentMode="scaleToFill" id="R6A-ic-VVZ">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="325"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" keyboardDismissMode="interactive" translatesAutoresizingMaskIntoConstraints="NO" id="Q5m-bu-tx4">
                                <rect key="frame" x="0.0" y="0.0" width="375" height="325"/>
                                <color key="backgroundColor" red="0.029720897158093947" green="0.052100368415464893" blue="0.073762690355329896" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
                                <string key="text">// Test accessor with various input and output types and handlers.
//
// Copyright (c) 2016-2016 The Regents of the University of California.
// All rights reserved.
//
// Permission is hereby granted, without written agreement and without
// license or royalty fees, to use, copy, modify, and distribute this
// software and its documentation for any purpose, provided that the above
// copyright notice and the following two paragraphs appear in all copies
// of this software.
//
// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
// PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
// ENHANCEMENTS, OR MODIFICATIONS.
//

/** Test accessor with various input and output types and handlers.
 *  This accessor is designed to be instantiable on any host, including
 *  the common host, which does not implement the require() function
 *  nor provide any mechanism for loading accessors.
 *
 *  @accessor test/TestAccessor
 *  @parameter p A parameter with default value 42.
 *  @input untyped An untyped input that will accept any JavaScript object.
 *  @input numeric A numeric input.
 *  @input boolean A boolean input.
 *  @output typeOfUntyped Produces the type (a string) of the input named 'untyped'.
 *  @output jsonOfUntyped Produces a JSON representation of the input named 'untyped',
 *   created using JSON.toString().
 *  @output numericPlusP Produces the value of the 'numeric' input plus 'p'.
 *  @output negation Produces the negation of the 'boolean' input.
 *  @author Edward A. Lee
 *  @version $$Id: TestAccessor.js 1121 2016-11-28 05:49:50Z cxh $$
 */

//cordova.define("TestAccessor", function(require, exports, module) {
exports.setup = function () {
    this.input('untyped'); // Untyped input.
    this.input('numeric', {
        'type': 'number',
        'value': 0
    }); // Numeric input.
    this.input('boolean', {
        'type': 'boolean'
    }); // Boolean input.
    this.output('typeOfUntyped', {
        'type': 'string'
    }); // Type of untyped input.
    this.output('jsonOfUntyped', {
        'type': 'string'
    }); // JSON of untyped input.
    this.output('numericPlusP', {
        'type': 'number'
    }); // Numeric input plus p.
    this.output('negation', {
        'type': 'boolean'
    }); // Negation of boolean input.
    this.parameter('p', {
        'value': 42
    }); // Untyped, with numeric value.
};

// Base class variable that is visible to subclasses through inheritance.
exports.variable = 'hello';

exports.initialize = function () {
    // Respond to any input by updating them all.
    this.addInputHandler('untyped', function () {
        this.send('typeOfUntyped', typeof this.get('untyped'));
        // Refer to the function using 'this.exports' rather than 'exports'
        // to allow an override. Note that we choose here to invoke formatOutput
        // with 'this' bound to 'this.exports'.
        this.send('jsonOfUntyped', this.exports.formatOutput(this.get('untyped')));
    });
    this.addInputHandler('numeric', function () {
        this.send('numericPlusP', this.get('numeric') + this.getParameter('p'));
    });
    this.addInputHandler('boolean', function () {
        this.send('negation', !this.get('boolean'));
    });
};

/** Define a function that can be overridden in subclasses. */
exports.formatOutput = function (value) {
    return 'JSON for untyped input: ' + JSON.stringify(value);
};

exports.fire = function () {
    console.log('TestAccessor.fire() invoked.');
};

//});
</string>
                                <color key="textColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                <fontDescription key="fontDescription" type="system" pointSize="10"/>
                                <textInputTraits key="textInputTraits" autocapitalizationType="sentences" autocorrectionType="yes" spellCheckingType="yes" returnKeyType="go" enablesReturnKeyAutomatically="YES"/>
                                <dataDetectorType key="dataDetectorTypes" link="YES"/>
                            </textView>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="XaM-Tl-Kzu">
                                <rect key="frame" x="147" y="285" width="80" height="30"/>
                                <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                <constraints>
                                    <constraint firstAttribute="width" constant="80" id="DEP-TE-yLb"/>
                                </constraints>
                                <state key="normal" title="Instantiate"/>
                                <userDefinedRuntimeAttributes>
                                    <userDefinedRuntimeAttribute type="number" keyPath="layer.cornerRadius">
                                        <integer key="value" value="5"/>
                                    </userDefinedRuntimeAttribute>
                                </userDefinedRuntimeAttributes>
                                <connections>
                                    <action selector="instantiateAccessorButtonPressed:" destination="hHV-Hu-I2E" eventType="touchUpInside" id="kib-Ef-U3A"/>
                                </connections>
                            </button>
                        </subviews>
                        <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                        <constraints>
                            <constraint firstAttribute="trailing" secondItem="Q5m-bu-tx4" secondAttribute="trailing" id="0kF-BQ-hbh"/>
                            <constraint firstItem="Q5m-bu-tx4" firstAttribute="bottom" secondItem="IS4-xu-Tmn" secondAttribute="top" id="UsV-u4-XDn"/>
                            <constraint firstItem="Q5m-bu-tx4" firstAttribute="top" secondItem="2pj-xl-5HO" secondAttribute="bottom" id="YfE-kB-Dh7"/>
                            <constraint firstItem="Q5m-bu-tx4" firstAttribute="leading" secondItem="R6A-ic-VVZ" secondAttribute="leading" id="abF-zh-ZRa"/>
                            <constraint firstItem="IS4-xu-Tmn" firstAttribute="top" secondItem="XaM-Tl-Kzu" secondAttribute="bottom" constant="10" id="mKu-io-DSs"/>
                            <constraint firstItem="XaM-Tl-Kzu" firstAttribute="centerX" secondItem="Q5m-bu-tx4" secondAttribute="centerX" id="rv9-KP-aS5"/>
                        </constraints>
                    </view>
                    <connections>
                        <outlet property="accessorCodeTextView" destination="Q5m-bu-tx4" id="mS2-gk-Wvl"/>
                    </connections>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="a1A-io-r6o" userLabel="First Responder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="1985" y="71"/>
        </scene>
        <!--Swarmlet View Controller-->
        <scene sceneID="mfw-jh-VxO">
            <objects>
                <viewController id="JhK-Md-9Zj" customClass="SwarmletViewController" customModule="AccessorInstantiator" customModuleProvider="target" sceneMemberID="viewController">
                    <layoutGuides>
                        <viewControllerLayoutGuide type="top" id="xne-JW-Z9A"/>
                        <viewControllerLayoutGuide type="bottom" id="HCs-j8-Fef"/>
                    </layoutGuides>
                    <view key="view" contentMode="scaleToFill" id="qNN-x4-x5A">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="325"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" keyboardDismissMode="interactive" translatesAutoresizingMaskIntoConstraints="NO" id="peK-9a-Q3M">
                                <rect key="frame" x="0.0" y="0.0" width="375" height="325"/>
                                <color key="backgroundColor" red="0.029720897159999999" green="0.052100368420000001" blue="0.073762690359999994" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
                                <string key="text">    Mobile('log').call('Input ports: ' + a.inputList);
    Mobile('log').call('');
    Mobile('log').call('');
    Mobile('log').call('Providing \'hello world\' as untyped input');
    a.provideInput('untyped', 'hello world');
    Mobile('log').call('Calling react');
    a.react();
    Mobile('log').call('Output ports: ' + a.outputList);
    Mobile('log').call('Type of Untyped: ' + a.latestOutput('typeOfUntyped'));
    Mobile('log').call(a.latestOutput('jsonOfUntyped'));
    
    Mobile('log').call('');
    Mobile('log').call('');
    Mobile('log').call('Providing 30 as numeric input');
    a.provideInput('numeric', 30);
    Mobile('log').call('Calling react');
    a.react();
    Mobile('log').call('Numeric plus 42: ' + a.latestOutput('numericPlusP'));</string>
                                <color key="textColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                <fontDescription key="fontDescription" type="system" pointSize="10"/>
                                <textInputTraits key="textInputTraits" autocapitalizationType="sentences" autocorrectionType="yes" spellCheckingType="yes" returnKeyType="go" enablesReturnKeyAutomatically="YES"/>
                                <dataDetectorType key="dataDetectorTypes" link="YES"/>
                            </textView>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="q9j-3x-YaJ">
                                <rect key="frame" x="147" y="287" width="80" height="30"/>
                                <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                <constraints>
                                    <constraint firstAttribute="width" constant="80" id="6Fp-WC-f7e"/>
                                </constraints>
                                <state key="normal" title="Run"/>
                                <userDefinedRuntimeAttributes>
                                    <userDefinedRuntimeAttribute type="number" keyPath="layer.cornerRadius">
                                        <integer key="value" value="5"/>
                                    </userDefinedRuntimeAttribute>
                                </userDefinedRuntimeAttributes>
                                <connections>
                                    <action selector="runSwarmletButtonPressed:" destination="JhK-Md-9Zj" eventType="touchUpInside" id="2po-hA-rfv"/>
                                </connections>
                            </button>
                        </subviews>
                        <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                        <constraints>
                            <constraint firstItem="q9j-3x-YaJ" firstAttribute="centerX" secondItem="qNN-x4-x5A" secondAttribute="centerX" id="34R-lo-f1f"/>
                            <constraint firstItem="peK-9a-Q3M" firstAttribute="top" secondItem="xne-JW-Z9A" secondAttribute="bottom" id="VYe-Ww-WF6"/>
                            <constraint firstItem="peK-9a-Q3M" firstAttribute="bottom" secondItem="HCs-j8-Fef" secondAttribute="top" id="ewL-0k-Pdq"/>
                            <constraint firstItem="HCs-j8-Fef" firstAttribute="top" secondItem="q9j-3x-YaJ" secondAttribute="bottom" constant="8" symbolic="YES" id="l3c-ss-vVd"/>
                            <constraint firstItem="peK-9a-Q3M" firstAttribute="centerX" secondItem="q9j-3x-YaJ" secondAttribute="centerX" id="nru-dP-a9l"/>
                            <constraint firstItem="peK-9a-Q3M" firstAttribute="leading" secondItem="qNN-x4-x5A" secondAttribute="leading" id="yJG-OF-4mU"/>
                        </constraints>
                    </view>
                    <connections>
                        <outlet property="swarmletCodeTextView" destination="peK-9a-Q3M" id="pdf-hm-fXz"/>
                    </connections>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="SRb-a2-JO1" userLabel="First Responder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="1986" y="700"/>
        </scene>
    </scenes>
</document>
